name: Update WordPress.org Assets

on:
  push:
    branches:
      - main
    paths:
      - 'readme.txt'
      - 'svn/assets/**'

permissions:
  contents: read

concurrency:
  group: wporg-assets-update
  cancel-in-progress: true

jobs:
  update-assets:
    name: Update WP.org Assets & Readme
    runs-on: ubuntu-latest
    env:
      SLUG: quelix
      SVN_URL: https://plugins.svn.wordpress.org/quelix
      SVN_WORKDIR: wporg-svn
      ASSETS_DIR: svn/assets
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: SVN Checkout and update specific directories
        shell: bash
        run: |
          # Ensure Subversion is installed
          sudo apt-get update -y && sudo apt-get install -y subversion
          svn --version
          
          # Checkout only the top-level directories
          svn co --depth=immediates "$SVN_URL" "$SVN_WORKDIR"
          
          # Update trunk and assets, which we always need
          svn update --set-depth=infinity "$SVN_WORKDIR/trunk"
          svn update --set-depth=infinity "$SVN_WORKDIR/assets"
          
          # Determine the stable tag from the trunk's readme.txt
          if [ -f "$SVN_WORKDIR/trunk/readme.txt" ]; then
            STABLE_TAG=$(grep -i "^Stable tag:" "$SVN_WORKDIR/trunk/readme.txt" | awk -F' ' '{print $3}' | tr -d '\r\n')
            if [ -n "$STABLE_TAG" ]; then
              echo "Stable tag is $STABLE_TAG. Updating tags/$STABLE_TAG directory."
              svn update --set-depth=infinity "$SVN_WORKDIR/tags/$STABLE_TAG"
              echo "STABLE_TAG=$STABLE_TAG" >> $GITHUB_ENV
            else
              echo "Could not determine stable tag from trunk/readme.txt."
            fi
          else
            echo "Warning: trunk/readme.txt not found. Cannot determine stable tag."
          fi

      - name: Synchronize plugin assets to $SVN_WORKDIR/assets
        shell: bash
        run: |
          if [ -d "$ASSETS_DIR" ]; then
            echo "Syncing repo assets from $ASSETS_DIR → $SVN_WORKDIR/assets"
            mkdir -p "$SVN_WORKDIR"/assets
            rsync -rc --delete \
              --include='*.png' --include='*.jpg' --include='*.jpeg' --include='*.gif' --include='*.svg' \
              --include='*.webp' --include='*.mp4' \
              --exclude='*' \
              "$ASSETS_DIR"/ "$SVN_WORKDIR"/assets/
          else
            echo "No repo assets found in $ASSETS_DIR. Skipping."
          fi

      - name: Synchronize readme.txt to SVN trunk and stable tag
        shell: bash
        run: |
          echo "Copying readme.txt to SVN trunk..."
          cp -f readme.txt "$SVN_WORKDIR/trunk/readme.txt"
          
          if [ -n "$STABLE_TAG" ] && [ -d "$SVN_WORKDIR/tags/$STABLE_TAG" ]; then
            echo "Copying readme.txt to SVN tags/$STABLE_TAG..."
            cp -f readme.txt "$SVN_WORKDIR/tags/$STABLE_TAG/readme.txt"
          else
            echo "Skipping readme.txt copy to tag directory (no stable tag found or directory does not exist)."
          fi

      - name: Prepare SVN changes (add/delete)
        shell: bash
        working-directory: ${{ env.SVN_WORKDIR }}
        run: |
          # First, check if there are any actual changes to commit
          if [ -z "$(svn status)" ]; then
            echo "No changes detected in SVN checkout. Nothing to commit."
            echo "NO_CHANGES=true" >> $GITHUB_ENV
            exit 0
          fi
          echo "Changes detected. Preparing for commit."
          # Remove deleted files from SVN
          svn status | awk '/^!/ {print $2}' | xargs -r svn rm --force
          # Add new/unversioned files
          svn add . --force --no-auto-props
          svn status

      - name: Commit to WordPress.org SVN
        if: env.NO_CHANGES != 'true'
        shell: bash
        working-directory: ${{ env.SVN_WORKDIR }}
        env:
          SVN_USERNAME: ${{ secrets.WPORG_USERNAME }}
          SVN_PASSWORD: ${{ secrets.WPORG_PASSWORD }}
        run: |
          if [ -z "$SVN_USERNAME" ] || [ -z "$SVN_PASSWORD" ]; then
            echo "Please set WPORG credentials as secrets (WPORG_USERNAME, WPORG_PASSWORD)." >&2
            exit 1
          fi
          svn commit \
            --username "$SVN_USERNAME" \
            --password "$SVN_PASSWORD" \
            --no-auth-cache \
            --non-interactive \
            -m "Update assets and readme.txt from GitHub commit ${{ github.sha }}"

      - name: Output – Success Info
        if: success() && env.NO_CHANGES != 'true'
        shell: bash
        run: |
          echo "Successfully updated assets and readme.txt on WordPress.org."
